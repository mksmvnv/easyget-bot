# Created by @mksmvnv

import re

from random import randint

from aiogram import Router, Bot, F
from aiogram.types import Message
from aiogram.filters import CommandStart, Command
from aiogram.utils.markdown import hbold, hcode, hitalic
from aiogram.fsm.context import FSMContext

from filters.admin import Admin
from keyboards import inline
from keyboards.reply import main_menu_keyboard
from utils.db_connect import Request
from utils.states import Calculation, Order
from utils.calculator import calculator
from utils.currency import current_exchange_rate

from data.config import admin_id


router = Router()


@router.message(CommandStart())
async def start_user_message(message: Message, request: Request):
    await request.add_user(message.from_user.id, message.from_user.username, message.from_user.full_name)
    await message.answer(f'üëã –ü—Ä–∏–≤–µ—Ç, {hbold(message.from_user.first_name)}! –í–æ—Ç –∏ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.',
                         reply_markup=main_menu_keyboard())


@router.message(Command("admin"), Admin(int(admin_id)))
async def start_admin_message(message: Message):
    await message.answer(f'üíØ –ü—Ä–∏–≤–µ—Ç, {hbold(message.from_user.first_name)}! –¢—ã –Ω–∞—Å—Ç–æ—è—â–∏–π –∞–¥–º–∏–Ω!',
                         reply_markup=main_menu_keyboard())


@router.message(F.text == '‚ö° –ó–∞–∫–∞–∑–∞—Ç—å')
async def category_order_message(message: Message, state: FSMContext):
    await state.set_state(Order.city)
    await message.answer(f'–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–æ—Å—Ç–∞–≤–∫–∏:',
                         reply_markup=inline.city_keyboard())


@router.message(F.text == 'üßÆ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä')
async def category_calculator_message(message: Message, state: FSMContext):
    await state.set_state(Calculation.logistics)
    await message.answer(f'–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞:',
                         reply_markup=inline.category_keyboard())


@router.message(F.text == 'üí∞ –ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å')
async def current_exchange_rate_message(message: Message):
    await message.answer(f'–ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å CNY/RUB: {hcode(str(current_exchange_rate - 1) + "‚ÇΩ")}',
                         reply_markup=inline.return_to_main_menu())


@router.message(F.text == 'üìÉ –û—Ç–∑—ã–≤—ã')
async def category_order_message(message: Message):
    await message.answer(f'–í—Å–µ –æ—Ç–∑—ã–≤—ã –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ.',
                         reply_markup=inline.show_reviews())


@router.message(F.text == 'üìå –û –Ω–∞—Å')
async def category_order_message(message: Message):
    await message.answer('–ö—Ç–æ –º—ã?\n\n'
                         'easyget. ‚Äî —ç—Ç–æ —Å–µ—Ä–≤–∏—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ —Å –ø–ª–æ—â–∞–¥–∫–∏ Poizon. '
                         '–ù–∞—à–∞ —Ü–µ–ª—å ‚Äî –ø–æ–º–æ—á—å –ª—é–¥—è–º –∏–∑ –†–§ –∫—É–ø–∏—Ç—å –ª—é–±–æ–π –±—Ä–µ–Ω–¥, –ª—é–±—É—é –º–æ–¥–µ–ª—å –æ–¥–µ–∂–¥—ã –∏ –æ–±—É–≤–∏, —Ç–µ—Ö–Ω–∏–∫–∏, '
                         '–∫–æ—Ç–æ—Ä—É—é –æ–Ω–∏ –∑–∞—Ö–æ—Ç—è—Ç, –≤ —ç—Ç–∏ –Ω–µ–ø—Ä–æ—Å—Ç—ã–µ –≤—Ä–µ–º–µ–Ω–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π, '
                         '–∫–æ–≥–¥–∞ –≤–æ –≤—Å–µ—Ö –º–∞–≥–∞–∑–∏–Ω–∞—Ö –Ω–∞—à–µ–π –Ω–µ–æ–±—ä—è—Ç–Ω–æ–π —Å—Ç—Ä–∞–Ω—ã –ø—É—Å—Ç–æ –∏ –±–µ–∑–≤–∫—É—Å–Ω–æ. '
                         '–¢–æ–≤–∞—Ä –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π, –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø—Ä–æ–≤–µ—Ä–∫—É Legit-Check. '
                         '–¶–µ–Ω—ã –Ω–∏–∂–µ —Ä—ã–Ω–æ—á–Ω—ã—Ö, –±–ª–∞–≥–æ–¥–∞—Ä—è –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—é –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ —Ä—ã–Ω–∫–∞.',
                         reply_markup=inline.return_to_main_menu())


@router.message(F.text == 'üõü FAQ')
async def category_order_message(message: Message):
    await message.answer(f'–í—Å–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –≥—Ä—É–ø–ø–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ.',
                         reply_markup=inline.show_all_info())


@router.message(Calculation.product)
async def calculation_message(message: Message, state: FSMContext):
    if message.text.isdigit():
        await state.update_data(product=message.text)
        data = await state.get_data()
        amount = calculator(int(data.get('product')), data.get('logistics'))
        await message.answer(f'–ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞: {hcode(str(int(amount)) + "‚ÇΩ")}\n'
                             f'–ë–µ–∑ —É—á–µ—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–∑ –ú–æ—Å–∫–≤—ã –¥–æ –≤–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞.',
                             reply_markup=inline.return_to_main_menu())
        await state.clear()
    else:
        await message.answer('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ. –í–≤–µ–¥–∏—Ç–µ –µ—â–µ —Ä–∞–∑.')


@router.message(Order.link)
async def order_message(message: Message, bot: Bot, state: FSMContext):
    pattern = r"https://dw4\.co/t/A/[^ ]+"
    search = re.search(pattern, message.text)
    if search:
        link = search.group(0)
        await state.update_data(link=link)
        data = await state.get_data()
        order_number = randint(1, 1000)
        await message.answer(f'‚úÖ {hbold(message.from_user.first_name)}, –≤–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω!\n\n'
                             f'–ó–∞–∫–∞–∑ ‚Ññ: {hcode(order_number)}\n'
                             f'–õ–æ–≥–∏–Ω: {hcode(message.from_user.username)}\n'
                             f'–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä: {hcode(data.get("link"))}\n\n'
                             f'{hitalic(
                                 '–û–∂–∏–¥–∞–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –Ω–∞—à–µ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞.')}',
                             reply_markup=inline.return_to_main_menu())
        await state.clear()
        order_info = f'–ò–º—è: {hbold(message.from_user.first_name)}\n'\
            '–ó–∞–∫–∞–∑ ‚Ññ: {hcode(order_number)}\n'\
            '–õ–æ–≥–∏–Ω: {hcode(message.from_user.username)}\n'\
            '–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä: {hcode(data.get("link"))}'
        await bot.send_message(admin_id, order_info)
    else:
        await message.answer('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞. –í–≤–µ–¥–∏—Ç–µ –µ—â–µ —Ä–∞–∑.')
