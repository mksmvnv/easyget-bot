# Created by @mksmvnv

import re

from random import randint

from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import CommandStart, Command
from aiogram.utils.markdown import hbold, hcode
from aiogram.fsm.context import FSMContext

from core.filters.admin import Admin
from core.keyboards import inline
from core.keyboards.reply import main_menu_keyboard
from core.utils.db_connect import Request
from core.utils.states import Calculation, Order
from core.utils.calculator import calculator
from core.utils.currency import current_exchange_rate

from config import admin_id


router = Router()


@router.message(CommandStart())
async def start_user_message(message: Message, request: Request):
    await request.add_user(message.from_user.id, message.from_user.first_name)
    await message.answer(f'üëã –ü—Ä–∏–≤–µ—Ç, {hbold(message.from_user.first_name)}! –í–æ—Ç –∏ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.',
                         reply_markup=main_menu_keyboard())


@router.message(Command("admin"), Admin(int(admin_id)))
async def start_admin_message(message: Message):
    await message.answer(f'üíØ –ü—Ä–∏–≤–µ—Ç, {hbold(message.from_user.first_name)}! –¢—ã –Ω–∞—Å—Ç–æ—è—â–∏–π –∞–¥–º–∏–Ω!',
                         reply_markup=main_menu_keyboard())


@router.message(F.text == 'üßÆ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä')
async def category_calculator_message(message: Message, state: FSMContext):
    await state.set_state(Calculation.logistics)
    await message.answer(f'–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞:',
                         reply_markup=inline.category_keyboard())


@router.message(F.text == '‚ö° –ó–∞–∫–∞–∑–∞—Ç—å')
async def category_order_message(message: Message, state: FSMContext):
    await state.set_state(Order.city)
    await message.answer(f'–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–æ—Å—Ç–∞–≤–∫–∏:',
                         reply_markup=inline.city_keyboard())


@router.message(Calculation.product)
async def calculation_message(message: Message, state: FSMContext):
    if message.text.isdigit():
        await state.update_data(product=message.text)
        data = await state.get_data()
        amount = calculator(int(data.get('product')), data.get('logistics'))
        await message.answer(f'–ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞: {hcode(str(int(amount)) + '‚ÇΩ')}\n'
                             f'–ë–µ–∑ —É—á–µ—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–∑ –ú–æ—Å–∫–≤—ã –¥–æ –≤–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞.',
                             reply_markup=inline.back_to_main_menu())
        await state.clear()
    else:
        await message.answer('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ. –í–≤–µ–¥–∏—Ç–µ –µ—â–µ —Ä–∞–∑.')


@router.message(Order.link)
async def order_message(message: Message, state: FSMContext):
    pattern = r"https://dw4\.co/t/A/[^ ]+"
    search = re.search(pattern, message.text)
    if search:
        link = search.group(0)
        await state.update_data(link=link)
        data = await state.get_data()
        await message.answer(f'{hbold(message.from_user.first_name)}!\n'
                             f'–í–∞—à –∑–∞–∫–∞–∑ ‚Ññ {hcode(randint(1, 1000))}\n'
                             f'–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä: {data.get('link')}\n'
                             '–û–∂–∏–¥–∞–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –Ω–∞—à–µ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞.',
                             reply_markup=inline.back_to_main_menu())
        await state.clear()
    else:
        await message.answer('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞. –í–≤–µ–¥–∏—Ç–µ –µ—â–µ —Ä–∞–∑.')


@router.message(F.text == 'üí∞ –ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å')
async def current_exchange_rate_message(message: Message, state: FSMContext):
    await message.answer(f'–ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å CNY/RUB: {hcode(str(current_exchange_rate - 1) + '‚ÇΩ')}',
                         reply_markup=inline.back_to_main_menu())
